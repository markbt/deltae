var N = null;var searchIndex = {};
searchIndex["deltae"]={"doc":"Calculate Delta E (color difference) between two colors in CIE Lab space.","items":[[3,"DeltaE","deltae","",N,N],[12,"method","","",0,N],[12,"value","","",0,N],[12,"color0","","",0,N],[12,"color1","","",0,N],[4,"DEMethod","","",N,N],[13,"DE2000","","",1,N],[13,"DE1994","","",1,N],[13,"DE1994T","","",1,N],[13,"DE1976","","",1,N],[13,"DECMC1","","",1,N],[13,"DECMC2","","",1,N],[0,"color","","Manipulate and convert CIE L*a*b* and Lch colors.",N,N],[3,"LabValue","deltae::color","",N,N],[12,"l","","",2,N],[12,"a","","",2,N],[12,"b","","",2,N],[3,"LchValue","","",N,N],[12,"l","","",3,N],[12,"c","","",3,N],[12,"h","","",3,N],[3,"XyzValue","","",N,N],[12,"x","","",4,N],[12,"y","","",4,N],[12,"z","","",4,N],[4,"ValueError","","",N,N],[13,"OutOfBounds","","",5,N],[13,"BadFormat","","",5,N],[11,"new","","New `LabValue` from 3 `f64`s",2,[[["f64"],["f64"],["f64"]],["result",["valueerror"]]]],[11,"zero","","New `LabValue` with a value of 0,0,0.",2,[[],["self"]]],[11,"from","","New `LabValue` from `&str`",2,[[["str"]],["result",["valueerror"]]]],[11,"to_lch","","Convert `LabValue` to `LchValue`",2,[[["self"]],["lchvalue"]]],[11,"chroma","","",2,[[["self"]],["f64"]]],[11,"hue","","",2,[[["self"]],["f64"]]],[11,"hue_radians","","",2,[[["self"]],["f64"]]],[11,"to_xyz","","",2,[[["self"]],["xyzvalue"]]],[11,"round_to","","Round `LabValue` to nearest decimal places.",2,[[["self"],["i32"]],["labvalue"]]],[11,"to_a","","Returns an array of [L, a, b]",2,N],[11,"to_vec","","Returns a `Vec<f64>` of [L, a, b]",2,[[["self"]],["vec",["f64"]]]],[11,"new","","New `LchValue` from 3 `f64`s",3,[[["f64"],["f64"],["f64"]],["result",["valueerror"]]]],[11,"zero","","New `LchValue` with a value of 0,0,0",3,[[],["self"]]],[11,"from","","New `LchValue` from `&str`",3,[[["str"]],["result",["valueerror"]]]],[11,"to_lab","","Convert `LchValue` to `LabValue`",3,[[["self"]],["labvalue"]]],[11,"round_to","","Round `LchValue` to nearest decimal places.",3,[[["self"],["i32"]],["self"]]],[11,"to_a","","Returns an array of [L, c, h]",3,N],[11,"to_vec","","Returns a `Vec<f64>` of [L, c, h]",3,[[["self"]],["vec",["f64"]]]],[11,"new","","New `XyzValue` from 3 `f64`s",4,[[["f64"],["f64"],["f64"]],["result",["valueerror"]]]],[11,"from","","New `XyzValue` from `&str`",4,[[["str"]],["result",["valueerror"]]]],[11,"to_lab","","",4,[[["self"]],["labvalue"]]],[11,"round_to","","",4,[[["self"],["i32"]],["self"]]],[11,"new","deltae","New `DeltaE` from `LabValues` and `DEMethod`.",0,[[["labvalue"],["labvalue"],["demethod"]],["deltae"]]],[11,"round_to","","Round `DeltaE` value and its components to nearest decimal places",0,[[["self"],["i32"]],["self"]]],[11,"from","","Parse `DeltaE` from `&str`'s",0,[[["str"],["str"],["str"]],["result",["deltae","box"]]]],[11,"from","","Parse `DEMethod` from `&str`.",1,[[["str"]],["self"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","deltae::color","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"eq","","",2,[[["self"],["labvalue"]],["bool"]]],[11,"ne","","",2,[[["self"],["labvalue"]],["bool"]]],[11,"eq","","",3,[[["self"],["lchvalue"]],["bool"]]],[11,"ne","","",3,[[["self"],["lchvalue"]],["bool"]]],[11,"eq","","",4,[[["self"],["xyzvalue"]],["bool"]]],[11,"ne","","",4,[[["self"],["xyzvalue"]],["bool"]]],[11,"eq","deltae","",0,[[["self"],["deltae"]],["bool"]]],[11,"ne","","",0,[[["self"],["deltae"]],["bool"]]],[11,"eq","","",1,[[["self"],["demethod"]],["bool"]]],[11,"clone","deltae::color","",2,[[["self"]],["labvalue"]]],[11,"clone","","",3,[[["self"]],["lchvalue"]]],[11,"clone","","",4,[[["self"]],["xyzvalue"]]],[11,"clone","deltae","",0,[[["self"]],["deltae"]]],[11,"clone","","",1,[[["self"]],["demethod"]]],[11,"fmt","deltae::color","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","deltae","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","deltae::color","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","deltae","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"description","deltae::color","",5,[[["self"]],["str"]]]],"paths":[[3,"DeltaE"],[4,"DEMethod"],[3,"LabValue"],[3,"LchValue"],[3,"XyzValue"],[4,"ValueError"]]};
initSearch(searchIndex);
